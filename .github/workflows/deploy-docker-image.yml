name: Deploy Docker Image CI

on:
  push:
    # tags: 
    #   - v*.*.*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --pull --tag cr.yandex/crpjresmdt6bvu99mm57/my_app:${GITHUB_REF##*/} --tag cr.yandex/crpjresmdt6bvu99mm57/my_app:latest
      
    - name: Docker login
      run: docker login --username oauth --password ${{ secrets.YC_SERVICE_ACCOUNT }}  cr.yandex

    - name: Publish image
      run: | 
        docker push cr.yandex/crpjresmdt6bvu99mm57/my_app:${GITHUB_REF##*/} 
        docker push cr.yandex/crpjresmdt6bvu99mm57/my_app:latest

    - name: Docker login
      run: |
        mkdir ~/.ssh
        echo ${PRIVATE_KEY} > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Docker login
      run: |    
        mkdir ~/.kube
        cp K8s/config ~/.kube/config
        sed -i 's/127.0.0.1/${K8S_SERVER}/' ~/.kube/config
        sed -i 's/<certificate-authority>/${K8S_CERTIFICATE_AUTHORITY_DATA}/' ~/.kube/config
        sed -i 's/<client-certificate>/${K8S_CLIENT_CERTIFICATE_DATA}/' ~/.kube/config
        sed -i 's/<client-key>/${K8S_CLIENT_KEY_DATA}/' ~/.kube/config

     - name: Dep
       run: ls ~/.kube

     - name: Dep
       run: cat ~/.kube/config

    - name: Deploy
      # if: startsWith(github.ref, 'refs/tags/v')    
      env:
        PRIVATE_KEY : ${{ secrets.K8S_PRIVATE_KEY }}
        K8S_CERTIFICATE_AUTHORITY_DATA : ${{ secrets.K8S_CERTIFICATE_AUTHORITY_DATA }}
        K8S_CLIENT_CERTIFICATE_DATA : ${{ secrets.K8S_CLIENT_CERTIFICATE_DATA }}
        K8S_CLIENT_KEY_DATA : ${{ secrets.K8S_CLIENT_KEY_DATA }}
        K8S_SERVER : ${{ vars.K8S_SERVER }}
      run: |       
        
        cat ~/.kube/config
        QBEC_VER=0.15.2  && wget -O- https://github.com/splunk/qbec/releases/download/v${QBEC_VER}/qbec-linux-amd64.tar.gz | tar -C /tmp -xzf -  && mv /tmp/qbec /tmp/jsonnet-qbec /usr/local/bin/
        PATH=$PATH:/usr/local/sbin
        qbec apply default --wait --yes


        # wget -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl  && chmod +x /usr/local/bin/kubectl
        # HELM_VER=3.9.0  && wget -O- https://get.helm.sh/helm-v${HELM_VER}-linux-amd64.tar.gz | tar -C /tmp -zxf -  && mv /tmp/linux-amd64/helm /usr/local/bin/helm
